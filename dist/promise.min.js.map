{"version":3,"sources":["promise.js"],"names":["myPromise","Promise","document","getElementById","XMLHttpRequest","innerHTML","something","req","resolve","reject","status","open","response","send","myDisplayer","then","message","error"],"mappings":"aAiEA,SAAIA,YAAgBC,GAClBC,SAAOC,eAAQC,QAAfC,UAAAC,EAGAC,IAAAA,UAAa,IAAAN,QAAK,SAAAO,EAAAC,GAChB,IAAAF,EAAQG,IAAAA,eAEPH,EAFDI,KAEO,MAAA,cACLF,EAAAA,OAAO,WACR,KAAAF,EAAAG,OALHF,EAAAD,EAAAK,UAOIC,EAAJ,mBAKEC,EAAAA,SAIDd,UALAe,KAAK,SAACC,GACLF,YAAYE,KAIb,MAFM,SAACC,GACNH,YAAYG","file":"promise.min.js","sourcesContent":["/* const myPromise = new Promise((resolve, reject) => {\r\n  setTimeout(() => {\r\n    resolve('I love you');  \r\n  }, 3000);\r\n});\r\n\r\nmyPromise.then((message) => {\r\n  document.getElementById('demo').innerHTML = message;\r\n}) */\r\n\r\n// below this is the standard and complete demonstration of promise\r\n\r\n/* const deliveryPackage = new Promise((resolve, reject) => {\r\n  console.log('Order Placed');\r\n\r\n  setTimeout(() => {\r\n    let isDelivered= Math.random() > 0.5;\r\n  \r\n    if (isDelivered) {\r\n      resolve('Delivered package successfully!')\r\n    } else {\r\n      reject('Delivery package successfully!')\r\n    };\r\n  }, 3000)\r\n})\r\n\r\n  deliveryPackage\r\n    .then((message) => {\r\n      console.log(message);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\n  console.log('Waiting for the package...'); */\r\n\r\n// F E T C H I N G   A   F I L E   U S I N G   A   C A L L B A C K\r\n\r\n/* function myDisplayer(something) {\r\n  document.getElementById('demo').innerHTML = something;\r\n}\r\n\r\nfunction getFile(myCallback) {\r\n  let req = new XMLHttpRequest();\r\n  req.onload = function() {\r\n    if (req.status == 200) {\r\n      myCallback(this.responseText);\r\n    } else {\r\n      myCallback(`Error: $(req.status)`);\r\n    }\r\n  }\r\n  req.open('GET', 'index.html');\r\n  req.send();\r\n}\r\n\r\ngetFile(myDisplayer); */\r\n\r\n\r\n\r\n// F E T C H I N G   A   F I L E   U S I N G   A   P R O M I S E\r\n\r\nfunction myDisplayer(something) {\r\n  document.getElementById('demo').innerHTML = something;\r\n}\r\n\r\nlet myPromise = new Promise((resolve, reject) => {\r\n  let req =  new XMLHttpRequest();\r\n\r\n  req.open('GET', 'index.html');\r\n  req.onload = ()=> {\r\n    if (req.status == 200) {\r\n      resolve(req.response);\r\n    } else {\r\n      reject('File not Found');\r\n    }\r\n  };\r\n  req.send();\r\n});\r\n\r\nmyPromise\r\n  .then((message) => {\r\n    myDisplayer(message);\r\n  })\r\n  .catch((error) => {\r\n    myDisplayer(error);\r\n  });\r\n"]}